library(cells) {
  cell(BUF) {
    area: 4;
    pin(A) { direction: input; }
    pin(Y) { direction: output; function: "A"; }
  }
  cell(NOT) {
    area: 2;
    pin(A) { direction: input; }
    pin(Y) { direction: output; function: "!A"; }
   }
  cell(NAND) {
      area: 4;
      pin(A) { direction: input; }
      pin(B) { direction: input; }
      pin(Y) { direction: output; function: "!(A&B)"; }
  }
  cell(NAND3) {
      area: 6;
      pin(A) { direction: input; }
      pin(B) { direction: input; }
      pin(C) { direction: input; }
      pin(Y) { direction: output; function: "!(A&B&C)"; }
  }
  cell(NOR) {
      area: 4;
      pin(A) { direction: input; }
      pin(B) { direction: input; }
      pin(Y) { direction: output; function: "!(A|B)"; }
  }
  cell(NOR3) {
      area: 6;
      pin(A) { direction: input; }
      pin(B) { direction: input; }
      pin(C) { direction: input; }
      pin(Y) { direction: output; function: "!(A|B|C)"; }
  }
  cell(AOI21) {
      area: 6;
      pin(A) { direction: input; }
      pin(B) { direction: input; }
      pin(C) { direction: input; }
      pin(Y) { direction: output; function: "!((A&B)|C)"; }
  }
  cell(OAI21) {
      area: 6;
      pin(A) { direction: input; }
      pin(B) { direction: input; }
      pin(C) { direction: input; }
      pin(Y) { direction: output; function: "!((A|B)&C)"; }
  }
  cell(AOI22) {
      area: 8;
      pin(A) { direction: input; }
      pin(B) { direction: input; }
      pin(C) { direction: input; }
      pin(D) { direction: input; }
      pin(Y) { direction: output; function: "!((A&B)|(C&D))"; }
  }
  cell(OAI22) {
      area: 8;
      pin(A) { direction: input; }
      pin(B) { direction: input; }
      pin(C) { direction: input; }
      pin(D) { direction: input; }
      pin(Y) { direction: output; function: "!((A|B)&(C|D))"; }
  }
  cell(AOI31) {
      area: 8;
      pin(A) { direction: input; }
      pin(B) { direction: input; }
      pin(C) { direction: input; }
      pin(D) { direction: input; }
      pin(Y) { direction: output; function: "!((A&B&C)|D)"; }
  }
  cell(OAI31) {
      area: 8;
      pin(A) { direction: input; }
      pin(B) { direction: input; }
      pin(C) { direction: input; }
      pin(D) { direction: input; }
      pin(Y) { direction: output; function: "!((A|B|C)&D)"; }
  }
  cell(AOI221) {
      area: 10;
      pin(A) { direction: input; }
      pin(B) { direction: input; }
      pin(C) { direction: input; }
      pin(D) { direction: input; }
      pin(E) { direction: input; }
      pin(Y) { direction: output; function: "!((A&B)|(C&D)|E)"; }
  }
  cell(OAI221) {
      area: 10;
      pin(A) { direction: input; }
      pin(B) { direction: input; }
      pin(C) { direction: input; }
      pin(D) { direction: input; }
      pin(E) { direction: input; }
      pin(Y) { direction: output; function: "!((A|B)&(C|D)&E)"; }
  }
  cell(AOI32) {
      area: 10;
      pin(A) { direction: input; }
      pin(B) { direction: input; }
      pin(C) { direction: input; }
      pin(D) { direction: input; }
      pin(E) { direction: input; }
      pin(Y) { direction: output; function: "!((A&B&C)|(D&E))"; }
  }
  cell(OAI32) {
      area: 10;
      pin(A) { direction: input; }
      pin(B) { direction: input; }
      pin(C) { direction: input; }
      pin(D) { direction: input; }
      pin(E) { direction: input; }
      pin(Y) { direction: output; function: "!((A|B|C)&(D|E))"; }
  }
  cell(AOI222) {
      area: 12;
      pin(A) { direction: input; }
      pin(B) { direction: input; }
      pin(C) { direction: input; }
      pin(D) { direction: input; }
      pin(E) { direction: input; }
      pin(F) { direction: input; }
      pin(Y) { direction: output; function: "!((A&B)|(C&D)|(E&F))"; }
  }
  cell(OAI222) {
      area: 12;
      pin(A) { direction: input; }
      pin(B) { direction: input; }
      pin(C) { direction: input; }
      pin(D) { direction: input; }
      pin(E) { direction: input; }
      pin(F) { direction: input; }
      pin(Y) { direction: output; function: "!((A|B)&(C|D)&(E&F))"; }
  }
  cell(DFF_PP0) {
        area: 16;
		ff(IQ, IQN) {
			clocked_on: "C";
			next_state: "D";
			clear: "R";
		}
		pin(D) { direction: input; }
		pin(R) { direction: input; }
		pin(C) { direction: input; clock: true; }
		pin(Q) { direction: output; function: "IQ"; }
	}
}
